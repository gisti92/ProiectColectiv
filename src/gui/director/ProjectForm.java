/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.director;

import gui.director.models.PhasesTableModel;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.director.Faza;
import model.director.Proiect;
import model.director.Proiect.ProjectType;
import model.director.TimeInterval;
import validation.Validator;

/**
 *
 * @author Artiom.Casapu
 */
public class ProjectForm extends javax.swing.JDialog {

    private Proiect prj;
    private boolean ok = false;
    private List<Faza> phases = new ArrayList<Faza>();

    /**
     * Creates new form ProjectForm
     */
    public ProjectForm(JFrame parent, boolean modal, Proiect prj, boolean update) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.prj = prj;

        phases.addAll(this.prj.getFaze());

        if (prj.getTip().equals(ProjectType.EVENIMENT_ADMINISTRATIV)) {
            jLabel5.setText("Activitati");
        }

        if (prj.getTip().equals(ProjectType.PROIECT_STIINTIFIC)) {
            jLabel5.setText("Faze");
        }

        phasesTable.setModel(new PhasesTableModel(phases));

        if (update) {

            denumireTextField.setText(prj.getDenumire());
            descriptionEdit.setText(prj.getDescriere());
            dela.setDate(prj.getInterval().getStart());
            panala.setDate(prj.getInterval().getEnd());

        }

    }

    private void updateProject() {
        prj.setDenumire(denumireTextField.getText());
        prj.setDescriere(descriptionEdit.getText());
        TimeInterval interval = new TimeInterval();
        interval.setStart((Date) dela.getDate());
        interval.setEnd((Date) panala.getDate());
        prj.setInterval(interval);
        prj.getFaze().clear();
        prj.getFaze().addAll(phases);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        denumireTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionEdit = new javax.swing.JEditorPane();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        phasesTable = new javax.swing.JTable();
        adaugaButton = new javax.swing.JButton();
        modificaButton = new javax.swing.JButton();
        stergeButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        dela = new org.jdesktop.swingx.JXDatePicker();
        panala = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText("Denumire:");

        jLabel2.setText("Descriere:");

        jLabel3.setText("Timp inceput:");

        jLabel4.setText("Timp sfirsit:");

        jScrollPane1.setViewportView(descriptionEdit);

        jLabel5.setText("Activitati:");

        phasesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(phasesTable);

        adaugaButton.setText("Adauga");
        adaugaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adaugaButtonActionPerformed(evt);
            }
        });

        modificaButton.setText("Modifica");
        modificaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificaButtonActionPerformed(evt);
            }
        });

        stergeButton.setText("Sterge");
        stergeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stergeButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        dela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delaActionPerformed(evt);
            }
        });

        panala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panalaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(denumireTextField)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(adaugaButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(modificaButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stergeButton))
                                    .addComponent(panala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(denumireTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dela, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(panala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adaugaButton)
                    .addComponent(modificaButton)
                    .addComponent(stergeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (!allFieldsCompleted()) {
            JOptionPane.showMessageDialog(this, "Inainte de a salva trebuie sa completati toate campurile", "Atentie", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (phases.size() == 0 ){
            JOptionPane.showMessageDialog(this, "Inainte de a salva trebuie sa difiniti cel putin o "+getChildName(), "Atentie", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        ok = true;
        updateProject();

        dispose();

    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

        //TODO: warning
        dispose();

    }//GEN-LAST:event_cancelButtonActionPerformed

    private void modificaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificaButtonActionPerformed

        if (!isSelected()) {
            JOptionPane.showMessageDialog(this, "Mai intai selectati o " + getChildName(), "Atentie", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int row = phasesTable.getSelectedRow();
        Faza f = ((PhasesTableModel) phasesTable.getModel()).getFaza(row);

        ProjectPhase phase = new ProjectPhase(this, true, f, true, true); //TODO replace last true 
        phase.setModal(true);
        phase.setVisible(true);

        phasesTable.setModel(new PhasesTableModel(phases));

    }//GEN-LAST:event_modificaButtonActionPerformed

    private void adaugaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adaugaButtonActionPerformed
        if (!allFieldsCompleted()) {
            JOptionPane.showMessageDialog(this, "Inainte de a adauga o "+getChildName()+" trebuie sa completati toate campurile", "Atentie", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Faza f = new Faza();

        if (prj.getTip().equals(ProjectType.EVENIMENT_ADMINISTRATIV)) {
            f.setTip(Faza.PhaseType.ADMINISTRATIVE_ACTIVITY);
        } else {
            f.setTip(Faza.PhaseType.PHASE);
        }

        ProjectPhase phase = new ProjectPhase(this, true, f, false, false); //TODO replace last true 
        phase.setModal(true);
        phase.setVisible(true);

        if (phase.isOk()) {
            phases.add(f);
            phasesTable.setModel(new PhasesTableModel(phases));
        }

    }//GEN-LAST:event_adaugaButtonActionPerformed

    private void stergeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stergeButtonActionPerformed
        if (!isSelected()) {
            JOptionPane.showMessageDialog(this, "Mai intai selectati o " + getChildName(), "Atentie", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int row = phasesTable.getSelectedRow();
        Faza f = ((PhasesTableModel) phasesTable.getModel()).getFaza(row);

        phases.remove(f);
        phasesTable.setModel(new PhasesTableModel(phases));

    }//GEN-LAST:event_stergeButtonActionPerformed

    private void delaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delaActionPerformed
        if (!Validator.areDatesValid(dela.getDate(), panala.getDate())) {
            dela.setDate(null);
            JOptionPane.showMessageDialog(this, "Data de inceput trebuie sa fie strict mai mic decat data de sfarsit!", "Atentie", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_delaActionPerformed

    private void panalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panalaActionPerformed
        if (!Validator.areDatesValid(dela.getDate(), panala.getDate())) {
            panala.setDate(null);
            JOptionPane.showMessageDialog(this, "Data de inceput trebuie sa fie strict mai mic decat data de sfarsit!", "Atentie", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_panalaActionPerformed

    private boolean allFieldsCompleted() {
        return !(dela.getDate() == null || panala.getDate() == null || denumireTextField.getText().isEmpty() || descriptionEdit.getText().isEmpty());
    }

    public boolean isOk() {
        return ok;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adaugaButton;
    private javax.swing.JButton cancelButton;
    private org.jdesktop.swingx.JXDatePicker dela;
    private javax.swing.JTextField denumireTextField;
    private javax.swing.JEditorPane descriptionEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton modificaButton;
    private javax.swing.JButton okButton;
    private org.jdesktop.swingx.JXDatePicker panala;
    private javax.swing.JTable phasesTable;
    private javax.swing.JButton stergeButton;
    // End of variables declaration//GEN-END:variables

    private String getChildName() {
        switch (prj.getTip()) {
            case EVENIMENT_ADMINISTRATIV:
                return "activitate";
            case PROIECT_STIINTIFIC:
                return "faza";
            default:
                return "";
        }
    }

    private boolean isSelected() {
        if (phasesTable.getSelectedRow() > -1) {
            return true;
        }
        return false;
    }
}
